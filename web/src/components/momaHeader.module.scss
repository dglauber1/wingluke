@use "../styles/variables/" as v;
@use "../styles/helpers";

.header {
  position: fixed;
  top: calc(var(--header-room) - var(--header-max-room));
  transition: top v.$baseline-animation-speed ease-in-out 0s,
    background-color v.$baseline-animation-speed ease-in-out;
  z-index: v.$header-z-index;
  height: v.$header-top-bar-height + v.$header-bottom-bar-height;
  width: 100%; //100vw;
  background-color: rgba(v.$primary-brand-color, 0.95);
  box-shadow: 0 10px 5px -5px rgba(0, 0, 6, 0.15),
    0 5px 2.5px -2.5px rgba(0, 0, 6, 0.15);
  &.transparent {
    background-color: transparent;
    // backdrop-filter: blur(6px);
    box-shadow: none;
  }
  &.opened {
    background-color: v.$primary-brand-color;
  }
  > * {
    background-color: transparent;
  }
  // 0 5px 2.5px 0px rgba(0, 0, 6, 0.1);
  // maybe use transform: scaleY(1) so height doesn't have to be explicitly defined? can be defined as auto instead
  // https://css-tricks.com/using-css-transitions-auto-dimensions/
  // height: auto;
  // overflow: hidden;

  .nav {
    height: 100%;

    .topBar {
      // padding: (v.$baseline / 2) v.$baseline;
      // height: $top-bar-height;
      height: v.$header-top-bar-height;
      display: flex;
      align-items: center;
      justify-content: stretch;

      .homeLink {
        flex: 0 1 auto;
        text-transform: uppercase;
        letter-spacing: 1px;
        color: white;
        font-size: v.$baseline;
        font-weight: 300;
        white-space: nowrap;
        padding: 0 v.$baseline / 2;

        display: flex;
        justify-content: center;
        align-items: center;
        width: fit-content;
        height: 100%;

        img {
          min-width: auto;
          height: 100%;
          // max-width: 13rem;
          max-height: v.$header-top-bar-height / 2;
          margin: 0;
          // margin: auto 0;
        }

        &.logoActive {
          pointer-events: none;
        }
      }

      .ctas {
        flex: 1 0;
        display: flex;
        align-items: center;
        justify-content: space-evenly;

        a {
          margin: v.$baseline / 2;
          color: white;
          text-align: center;
          border-bottom: 2px solid transparent;
          // @include helpers.button-style(v.$primary-brand-color, white, 0%);
          // text-decoration: none;

          &.activeCta {
            pointer-events: none;
            border-bottom: 2px solid white;
          }

          @media (min-width: 550px) {
            @include helpers.button-style(white, v.$primary-brand-color, 30%);

            outline-style: solid;
            outline-color: transparent;
            box-shadow: 0 0 0 4px white inset;
            border-bottom: none;

            &:focus,
            &:hover,
            &.activeCta {
              border-bottom: none;
              color: white;
              background-color: v.$primary-brand-color;
              outline-style: solid;
              outline-color: transparent;
              box-shadow: 0 0 0 4px white inset;
            }

            &.activeCta {
            }
          }
        }
      }
    }
  }

  .bottomBar {
    height: v.$header-bottom-bar-height;
    width: 100%;
    display: flex;
    justify-content: stretch;
    align-items: center;

    > button {
      flex: 1;
      @media (max-width: 460px) {
        flex: 1 1 auto; // this makes it so that longer button titles take up more room (proportional to their length), preventing long titles from breaking onto two lines
      }

      height: 100%;
      @include helpers.remove-default-button-styles();
      color: white;
      transition: background-color v.$baseline-animation-speed ease-in-out;
      position: relative;

      $header-item-font-size: 1rem;
      span {
        background-color: transparent;
        font-weight: 500;
        font-size: $header-item-font-size;
        letter-spacing: 1px;
        text-transform: uppercase;
        margin: 0 v.$baseline / 4;

        /* @media (max-width: 1000px) {
          font-size: 1.2rem;
        }
        @media (max-width: 890px) {
          font-size: 1.15rem;
        }
        @media (max-width: 830px) {
          font-size: 1.05rem;
        } */
        @media (max-width: 400px) {
          font-size: 0.8rem;
        }
      }

      .headerTitle {
      }

      .closeHeaderIcon {
        position: absolute;
        top: (v.$header-bottom-bar-height - 1.7rem) / 2;
        right: v.$baseline / 2;
        visibility: hidden;

        // TODO update this px width based on when design breaks
        @media (max-width: 700px) {
          display: none;
        }
      }

      &:focus {
        // outline: none;
      }

      &:hover,
      &:focus,
      &.front {
        .headerTitle {
          // text-decoration: underline;
          border-bottom: 2px solid white;
        }

        .closeHeaderIcon {
          visibility: visible;
        }
      }

      &.front {
        background-color: v.$header-item-open-color;
      }
    }
  }

  $close-button-height: 2 * v.$baseline;
  .expandingContainer {
    visibility: hidden;
    transition: height v.$baseline-animation-speed ease-in-out 0s,
      opacity v.$baseline-animation-speed + 0.1s ease-in-out,
      visibility v.$baseline-animation-speed + 0.1s ease-in-out,
      top v.$baseline-animation-speed ease-in-out;
    background-color: v.$header-item-open-color;

    // display: grid;

    opacity: 0;
    height: 0;
    width: 100%; // 100vw;
    z-index: v.$header-expanding-container-z-index + 1;
    position: fixed;
    top: var(--header-room);
    overflow: auto;

    text-align: center;
    margin: 0 auto;

    &.headerIsOpen {
      // visibility: visible;
      height: calc(100vh - var(--header-room) - #{$close-button-height});
    }

    &.front {
      opacity: 1;
      visibility: visible;
      // z-index: v.$header-expanding-container-z-index;
    }

    .headerItemLinks {
      margin: v.$baseline;

      a {
        border: 4px solid transparent;
        margin-top: v.$baseline;
        padding: 0 v.$baseline / 4;
        font-size: 3rem;
        color: white;
        display: block;

        &:hover,
        &:focus {
          border: 4px solid rgba(white, 0.7);
          outline: none;
        }

        &.activeLink {
          border: 4px solid white;
          // cursor: default;
          pointer-events: none;

          &:hover,
          &:focus {
            outline: none;
            border: 4px solid white;
          }
        }
      }
    }
  }

  .expandingContainerBg {
    visibility: hidden;
    transition: height v.$baseline-animation-speed ease-in-out 0s,
      opacity v.$baseline-animation-speed ease-in-out,
      visibility v.$baseline-animation-speed ease-in-out,
      top v.$baseline-animation-speed ease-in-out;
    background-color: v.$header-item-open-color;

    opacity: 0;
    height: 0;
    width: 100%; // 100vw;
    z-index: v.$header-expanding-container-z-index;

    &.headerIsOpen {
      // visibility: visible;
      height: calc(100vh - var(--header-room));
      opacity: 1;
      visibility: visible;
    }

    // transition: z-index 0s linear 1s;
    position: fixed;
    top: var(--header-room);
    overflow: auto;
    margin: 0;
  }

  .closeButton {
    @include helpers.remove-default-button-styles();

    bottom: calc(100vh - var(--header-room) - #{$close-button-height});
    opacity: 0;
    transition: bottom v.$baseline-animation-speed ease-in-out,
      opacity v.$baseline-animation-speed ease-in-out,
      visibility v.$baseline-animation-speed ease-in-out;

    background-color: v.$primary-brand-color;
    position: fixed;
    left: 0;
    height: $close-button-height;
    width: 100%;
    z-index: v.$header-expanding-container-z-index + 2;
    border: 4px solid white;
    color: white;
    visibility: hidden;

    > svg {
      background-color: transparent;
    }

    &:hover,
    &:focus {
      background-color: v.$header-item-open-color;
      // text-decoration: underline;
      // border-bottom: 1px solid white;
    }

    &.closeButtonShown {
      visibility: visible;
      opacity: 1;
      bottom: 0;
    }
  }
}
