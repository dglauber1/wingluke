'use strict';

Object.defineProperty(exports, "__esModule", {
    value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _Cell = require('./Cell.css');

var _Cell2 = _interopRequireDefault(_Cell);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

// Adapted from https://github.com/saninmersion/react-minesweeper

var Cell = function (_React$Component) {
    _inherits(Cell, _React$Component);

    function Cell() {
        _classCallCheck(this, Cell);

        return _possibleConstructorReturn(this, (Cell.__proto__ || Object.getPrototypeOf(Cell)).apply(this, arguments));
    }

    _createClass(Cell, [{
        key: 'getValue',
        value: function getValue() {
            if (!this.props.value.isRevealed) {
                return this.props.value.isFlagged ? "ðŸš©" : null;
            }
            if (this.props.value.isMine) {
                return "ðŸ’£";
            }
            if (this.props.value.neighbour === 0) {
                return null;
            }
            return this.props.value.neighbour;
        }
    }, {
        key: 'render',
        value: function render() {
            var _cx;

            var className = (0, _classnames2.default)(_Cell2.default.cell, (_cx = {}, _defineProperty(_cx, _Cell2.default.revealed, !!this.props.value.isRevealed), _defineProperty(_cx, _Cell2.default.mine, this.props.value.isMine), _defineProperty(_cx, _Cell2.default.flag, this.props.value.isFlagged), _defineProperty(_cx, _Cell2.default.clear, this.props.clear), _defineProperty(_cx, _Cell2.default.black, this.props.value.neighbour == 3), _defineProperty(_cx, _Cell2.default.red, this.props.value.neighbour == 3), _defineProperty(_cx, _Cell2.default.green, this.props.value.neighbour == 2), _defineProperty(_cx, _Cell2.default.blue, this.props.value.neighbour == 1), _cx));

            return _react2.default.createElement(
                'div',
                { ref: 'cell',
                    onClick: this.props.onClick,
                    className: className,
                    onContextMenu: this.props.cMenu },
                this.getValue()
            );
        }
    }]);

    return Cell;
}(_react2.default.Component);

exports.default = Cell;