'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _propTypes = require('prop-types');

var _propTypes2 = _interopRequireDefault(_propTypes);

var _getIt = require('get-it');

var _getIt2 = _interopRequireDefault(_getIt);

var _jsonResponse = require('get-it/lib/middleware/jsonResponse');

var _jsonResponse2 = _interopRequireDefault(_jsonResponse);

var _promise = require('get-it/lib/middleware/promise');

var _promise2 = _interopRequireDefault(_promise);

var _Cats = require('./Cats.css');

var _Cats2 = _interopRequireDefault(_Cats);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var request = (0, _getIt2.default)([(0, _promise2.default)(), (0, _jsonResponse2.default)()]);

var Cats = function (_React$Component) {
  _inherits(Cats, _React$Component);

  function Cats() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, Cats);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Cats.__proto__ || Object.getPrototypeOf(Cats)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      imageUrl: null,
      error: null
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(Cats, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      var _this2 = this;

      request({ url: 'https://api.thecatapi.com/v1/images/search' }).then(function (response) {
        var imageUrl = response.body[0].url;
        _this2.setState({ imageUrl: imageUrl });
      }).catch(function (error) {
        return _this2.setState({ error: error });
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _state = this.state,
          imageUrl = _state.imageUrl,
          error = _state.error;

      if (error) {
        return _react2.default.createElement(
          'pre',
          null,
          JSON.stringify(error, null, 2)
        );
      }
      var imageWidth = this.props.imageWidth;

      return _react2.default.createElement(
        'div',
        { className: _Cats2.default.container },
        _react2.default.createElement(
          'h2',
          null,
          'A cat'
        ),
        _react2.default.createElement('img', { src: imageUrl, width: imageWidth })
      );
    }
  }]);

  return Cats;
}(_react2.default.Component);

Cats.propTypes = {
  imageWidth: _propTypes2.default.number
};
Cats.defaultProps = {
  imageWidth: 200
};
exports.default = {
  name: 'cats',
  component: Cats
};